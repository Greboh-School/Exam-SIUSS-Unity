services:
  mysql:
    image: bitnami/mysql:latest
    container_name: mysql
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "3306:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10

  seq:
    image: datalust/seq:latest
    container_name: seq-logging
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"
    restart: unless-stopped

  api-services-authentication:
    image: hoberg/services-authentication:latest
    depends_on:
      mysql:
        condition: service_healthy
    container_name: services-authentication
    environment:
      - ConnectionStrings__MySQL=Server=mysql;Port=3306;Database=auth;Uid=root;
      - Config__Service__Name=Authentication Service
      - Config__Service__Route=api
      - Config__Service__Debug=false
      - Config__Auth__Secret=SuperLongSecretThatShouldNotBePublic
      - Config__TelemetryLogging__Enabled=true
      - Config__TelemetryLogging__Host=http://seq-logging:5341
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_HTTP_PORTS="8080"
    ports:
      - "8080:8080"
    restart: unless-stopped
  api-services-registry:
    image: hoberg/services-registry:latest
    # depends_on:
    #   - rabbitmq
    container_name: services-registry
    environment:
      - Config__Service__Name=registry Service
      - Config__Service__Route=api
      - Config__Service__Debug=false
      - Config__Auth__Secret=SuperLongSecretThatShouldNotBePublic
      - Config__TelemetryLogging__Enabled=true
      - Config__TelemetryLogging__Host=http://seq-logging:5341
      # - RabbitMQ__Host=rabbitmq
      - ASPNETCORE_URLS=http://*:5277
      - ASPNETCORE_HTTP_PORTS="5277"
    ports:
      - "5277:5277"
    restart: unless-stopped
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     RABBITMQ_DEFAULT_USER: Dev
  #     RABBITMQ_DEFAULT_PASS: Test-1234
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq 
  #   restart: unless-stopped
  # unity-server:
  #   container_name: unity-server-1
  #   image: hoberg/unity-server
  #   command: ["-mode", "server", "-p", "6969"]
  #   environment:
  #     - UNITY_SERVER_IP=127.0.0.1:6969
  #   ports:
  #     - "6969:6969/udp"
  #   depends_on:
  #     - api-services-registry
  # unity-server-2:
  #   container_name: unity-server-2
  #   image: hoberg/unity-server
  #   command: ["-mode", "server", "-p", "8585"]
  #   environment:
  #     - SERVER_PORT=8585
  #   ports:
  #     - "8585:8585/udp"
  #   depends_on:
  #     - api-services-registry
  #     - unity-server

  # unity-server:
  #   container_name: unity-server-1
  #   build: 
  #     context: ./ServerBuilds
  #     dockerfile: Dockerfile
  #   command: ["-mode", "server", "-p", "6969"]
  #   ports:
  #     - "6969:6969/udp"
  #   depends_on:
  #     - api-services-registry
  # unity-server-2:
  #   container_name: unity-server-2
  #   build: 
  #     context: ./ServerBuilds
  #     dockerfile: Dockerfile
  #   command: ["-mode", "server", "-p", "8585"]
  #   ports:
  #     - "8585:8585/udp"
  #   depends_on:
  #     - api-services-registry
  #     - unity-server
    
volumes:
  rabbitmq_data: